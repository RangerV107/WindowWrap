<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OpenControls.Wpf.Utilities.ValueConverters">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <local:EnumComparisonConverter x:Key="EnumComparisonConverter" />
    <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <local:BrushToColourConverter x:Key="BrushToColourConverter" />
    <local:CornerRadiusToStringConverter x:Key="CornerRadiusToStringConverter" />
    <local:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
    <local:IntToHexStringConverter x:Key="IntToHexStringConverter" />
    <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    <local:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter" />
    <local:ThicknessToStringConverter x:Key="ThicknessToStringConverter" />
    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="4,3,4,3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="GroupBoxStyle" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="#BBBBBB"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="10,2,10,2"/>
        <Setter Property="Height" Value="22"/>
    </Style>
    <Style x:Key="Button40Style" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="40"/>
    </Style>
    <Style x:Key="Button60Style" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="60"/>
    </Style>
    <Style x:Key="Button80Style" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="80"/>
    </Style>
    <Style x:Key="Button100Style" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="100"/>
    </Style>
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Padding" Value="0,0,0,2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="AlternatingRowBackground" Value="White"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="VerticalGridLinesBrush" Value="LightSteelBlue"/>
        <Setter Property="HorizontalGridLinesBrush" Value="LightSteelBlue"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DataGridNoSelectStyle" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource DataGridStyle}">
                <Setter Property="RowBackground" Value="#CCDAFF" />

        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
</ResourceDictionary>